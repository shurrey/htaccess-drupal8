<?php

/**
 * @file
 * Htaccess is a module which autogenerates a Drupal root htaccess
 * file based on your settings.
 */

define('HTACCESS_TEMPLATE_PATH', drupal_get_path('module', 'htaccess') . '/includes/htaccess.txt');

/**
 * Implementation of hook_help()
 */
function htaccess_help($path, $arg) {
  $output = '';
  switch ($path) {
    case "admin/help#htaccess":
      $output = '<p>'.  t("Auto generate htaccess. ") .'</p>';
      break;
  }
  return $output;
}


/**
 * @FIXME
 * This implementation of hook_menu() cannot be automatically converted because
 * it contains logic (i.e., branching statements, function calls, object
 * instantiation, etc.) You will need to convert it manually. Sorry!
 *
 * For more information on how to convert hook_menu() to Drupal 8's new routing
 * and linking systems, see https://api.drupal.org/api/drupal/core%21includes%21menu.inc/group/menu/8
 */


function htaccess_menu() {
  $items = array();

  $items['admin/config/system/htaccess'] = array(
    'title' => t('Htaccess'),
    'description' => t('Configure htaccess.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('htaccess_settings'),
    'access arguments' => array('administer htaccess module'),
    'file' => 'htaccess.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/config/system/htaccess/main'] = array(
  'title' => t('Settings'),
  'type' => MENU_DEFAULT_LOCAL_TASK,
  'weight' => 10,
  );

  $items['admin/config/system/htaccess/generate'] = array(
    'title' => t('Generate'),
    'description' => t('Generate htaccess.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('htaccess_generate'),
    'access arguments' => array('administer htaccess module'),
    'file' => 'htaccess.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 20,
  );

  $items['admin/config/system/htaccess/deployment'] = array(
    'title' => t('Deployment'),
    'description' => t('Deploy htaccess.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('htaccess_deployment'),
    'access arguments' => array('administer htaccess module'),
    'file' => 'htaccess.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 30,
  );

  $items['admin/config/system/htaccess/deployment/view/%'] = array(
    'page callback' => 'htaccess_display',
    'page arguments' => array(6),
    'access arguments' => array('administer htaccess module'),
    'file' => 'htaccess.admin.inc',
    'type' => MENU_CALLBACK,
    'weight' => 30,
  );

  $items['admin/config/system/htaccess/deployment/deploy/%'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('htaccess_confirm_form', 'deploy', 6),
    'access arguments' => array('administer htaccess module'),
    'file' => 'htaccess.admin.inc',
    'type' => MENU_CALLBACK,
    'weight' => 30,
  );

  $items['admin/config/system/htaccess/deployment/download/%'] = array(
    'page callback' => 'htaccess_download',
    'page arguments' => array(6),
    'access arguments' => array('administer htaccess module'),
    'file' => 'htaccess.admin.inc',
    'type' => MENU_CALLBACK,
    'weight' => 30,
  );

  $items['admin/config/system/htaccess/deployment/delete/%'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('htaccess_confirm_form', 'delete', 6),
    'access arguments' => array('administer htaccess module'),
    'file' => 'htaccess.admin.inc',
    'type' => MENU_CALLBACK,
    'weight' => 30,
  );

  return $items;
}

function htaccess_cron(){
  // try to get current htaccess content
  $root_path = \Drupal::root();

  $htaccess_filepath = $root_path.'/.htaccess';

  $htaccess_current = file_get_contents($htaccess_filepath);

  if($htaccess_current){
    // Get the current htaccess deployed
    $htaccess_deployed = db_select('htaccess', 'h')
    ->fields('h')
    ->condition('deployed', 1, '=')
    ->execute()
    ->fetchAssoc();

    if($htaccess_deployed){

      $htaccess_deployed = $htaccess_deployed['htaccess'];

        // Compare the two results
        if($htaccess_current === $htaccess_deployed){

          \Drupal::config('htaccess.settings')->clear('htaccess_altered')->save();

        }
        else{

          drupal_set_message(t('The htaccess seems to be altered.'), 'warning');
          \Drupal::configFactory()->getEditable('htaccess.settings')->set('htaccess_altered', true)->save();
      }
    }
  }
}
